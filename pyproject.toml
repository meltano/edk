[tool.poetry]
name = "meltano.edk"
version = "0.0.0"
description = "A framework for building Meltano extensions"
authors = ["Meltano Team and Contributors"]
maintainers = ["Meltano Team and Contributors"]
readme = "README.md"
homepage = "https://meltano.com"
repository = "https://github.com/meltano/edk"
keywords = [
    "Meltano",
    "Meltano Extension",
    "Meltano EDK"
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Typing :: Typed",
]
license = "Apache-2.0"

packages = [
  { include = "meltano" }
]

[tool.poetry.urls]
"Issue Tracker" = "https://github.com/meltano/edk/issues"
"Twitter" = "https://twitter.com/meltanodata/"
"Changelog" = "https://github.com/meltano/edk/blob/main/CHANGELOG.md"
"Slack" = "https://meltano.com/slack"
"Youtube" = "https://www.youtube.com/meltano"

[tool.poetry.dependencies]
python = ">=3.8"
structlog = ">=21,<25"
PyYAML = ">=6,<7"
pydantic = ">=2,<3"
devtools = ">=0.9.0,<1"
# Sphinx dependencies installed as optional 'docs' extras
# https://github.com/readthedocs/readthedocs.org/issues/4912#issuecomment-664002569
sphinx = {version = ">=4.5,<9.0", optional = true}
furo = {version = ">=2022.12.7,<2025.0.0", optional = true}
sphinx-copybutton = {version = ">=0.3.1,<0.6.0", optional = true}
myst-parser = {version = ">=0.17.2,<3.1.0", optional = true}
sphinx-autobuild = {version = "^2021.3.14", optional = true}

[tool.poetry.extras]
docs = [
    "sphinx",
    "furo",
    "sphinx-copybutton",
    "myst-parser",
    "sphinx-autobuild",
]

[tool.poetry.group.dev.dependencies]
copier = ">=8.1.0,<10.0"
pytest = ">=7.4.2,<9.0.0"
types-pyyaml = "^6.0.12.4"

# Cookiecutter tests
mypy = "^1.6"
ruff = ">=0.5.0,<0.9"
typer = ">=0.6.1,<0.14.0"

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
ignore = [
  "ANN101",
]
select = [
  "E",
  "F",
  "B",
  "I",
  "ANN",
  "D",
  "UP",
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.per-file-ignores]
"docs/**" = [
  "D",
]
"tests/**" = [
  "ANN201",
  "D",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = [
    "poetry-core==1.9",
    "poetry-dynamic-versioning==1.2",
]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
